/// <reference types="node" />
import * as stream from "stream";
export declare type Waifu2xFormats = "bmp" | "dib" | "exr" | "hdr" | "jpe" | "jpeg" | "jpg" | "pbm" | "pgm" | "pic" | "png" | "pnm" | "ppm" | "pxm" | "ras" | "sr" | "tif" | "tiff" | "webp";
export interface Waifu2XOptions {
    noise?: 0 | 1 | 2 | 3;
    scale?: number;
    pngCompression?: number;
    jpgWebpQuality?: number;
    recursion?: 0 | 1;
    recursionFormat?: Waifu2xFormats;
    rename?: string;
    callFromPath?: boolean;
}
export default class Waifu2x {
    static parseFilename: (source: string, dest: string, rename: string) => {
        folder: string;
        image: string;
    };
    static recursiveRename: (folder: string, fileNames: string[], rename: string) => void;
    static upscaleImage: (source: string, dest?: string, options?: Waifu2XOptions) => string;
    static upscaleImages: (sourceFolder: string, destFolder: string, options?: Waifu2XOptions) => string;
    static encodeGif: (files: string[], dest?: string) => Promise<unknown>;
    static awaitStream: (writeStream: stream.Writable) => Promise<unknown>;
    static upscaleGIF: (source: string, dest: string, constraint?: number) => Promise<void>;
    static upscaleGifs: (sourceFolder: string, destFolder: string, constraint?: number, limit?: number) => Promise<void>;
}
